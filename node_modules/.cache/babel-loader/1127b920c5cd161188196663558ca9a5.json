{"ast":null,"code":"var _jsxFileName = \"/home/melvin/code/Melvinvmegen/melvinvmegen.github.io/src/Containers/Header/ContactForm/ContactForm.js\";\nimport React from 'react';\nimport Button from '../../../Components/HireMe/HireMe';\nimport Input from \"../../../Components/Input/Input\";\nimport { Component } from 'react';\nimport axios from '../../../axios-contacts';\n\nclass ContactForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orderForm: {\n        name: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Name'\n          },\n          value: ''\n        },\n        street: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your street'\n          },\n          value: ''\n        },\n        zipCode: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Zip Code'\n          },\n          value: ''\n        },\n        country: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your country'\n          },\n          value: ''\n        },\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'email',\n            placeholder: 'Your Name'\n          },\n          value: ''\n        }\n      }\n    };\n\n    this.inputChangedHandler = (event, inputIdentifier) => {\n      const form = { ...this.state.orderForm\n      };\n      const updatedFormElement = { ...form[inputIdentifier]\n      };\n      updatedFormElement.value = event.target.value;\n      form[inputIdentifier] = updatedFormElement;\n      this.setState({\n        orderForm: form\n      });\n    };\n\n    this.contactHandler = event => {\n      event.preventDefault();\n      console.log('jsuis la');\n      const formData = {};\n\n      for (let formElement in this.state.orderForm) {\n        formData[formElement] = this.state.orderForm[formElement].value;\n      }\n\n      const contact = {\n        contactData: formData\n      };\n      axios.post('/contacts.json', contact).then(response => {\n        console.log(response);\n      }).catch(error => console.log(error));\n    };\n  }\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n\n    return React.createElement(\"form\", {\n      action: \"\",\n      className: true,\n      onSubmit: this.contactHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, formElementsArray.map(formElement => React.createElement(Input, {\n      key: formElement.id,\n      elementType: formElement.config.elementType,\n      elementConfig: formElement.config.elementConfig,\n      value: formElement.config.value,\n      changed: event => this.inputChangedHandler(event, formElement.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: this.contactHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["/home/melvin/code/Melvinvmegen/melvinvmegen.github.io/src/Containers/Header/ContactForm/ContactForm.js"],"names":["React","Button","Input","Component","axios","ContactForm","state","orderForm","name","elementType","elementConfig","type","placeholder","value","street","zipCode","country","email","inputChangedHandler","event","inputIdentifier","form","updatedFormElement","target","setState","contactHandler","preventDefault","console","log","formData","formElement","contact","contactData","post","then","response","catch","error","render","formElementsArray","key","push","id","config","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '../../../Components/HireMe/HireMe'\nimport Input from \"../../../Components/Input/Input\"\nimport { Component } from 'react';\nimport axios from '../../../axios-contacts'\n\nclass ContactForm extends Component {\n  state = {\n    orderForm: {\n      name: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Your Name'\n        },\n        value: ''\n      },\n      street: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Your street'\n        },\n        value: ''\n      },\n      zipCode: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Zip Code'\n        },\n        value: ''\n      },\n      country: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Your country'\n        },\n        value: ''\n      },\n      email: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'email',\n          placeholder: 'Your Name'\n        },\n        value: ''\n      }\n    }\n  }\n\n  inputChangedHandler = (event, inputIdentifier) => {\n    const form = {\n      ...this.state.orderForm\n    };\n    const updatedFormElement = {\n      ...form[inputIdentifier]\n    };\n    updatedFormElement.value = event.target.value;\n    form[inputIdentifier] = updatedFormElement\n    this.setState({ orderForm: form })\n  }\n\n  contactHandler = (event) => {\n    event.preventDefault();\n    console.log('jsuis la')\n    const formData = {};\n    for (let formElement in this.state.orderForm) {\n      formData[formElement] = this.state.orderForm[formElement].value;\n    }\n    const contact = {\n      contactData: formData\n    }\n    axios.post('/contacts.json', contact)\n      .then(response => { console.log(response) })\n      .catch(error => console.log(error));\n  }\n\n  render() {\n    const formElementsArray = []\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      })\n    }\n    return (\n      (\n        <form action=\"\" className onSubmit={this.contactHandler}>\n          {formElementsArray.map(formElement => (\n            <Input\n              key={formElement.id}\n              elementType={formElement.config.elementType}\n              elementConfig={formElement.config.elementConfig}\n              value={formElement.config.value}\n              changed={(event) => this.inputChangedHandler(event, formElement.id)} />\n          ))}\n          <Button onClick={this.contactHandler} />\n        </form>\n      )\n    )\n  }\n}\n\nexport default ContactForm\n"]},"metadata":{},"sourceType":"module"}