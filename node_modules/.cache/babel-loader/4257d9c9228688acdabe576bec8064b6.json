{"ast":null,"code":"var _jsxFileName = \"/home/melvin/code/Melvinvmegen/melvinvmegen.github.io/src/Components/Input/Input.js\";\nimport React from 'react';\nimport classes from './Input.module.css';\n\nconst Input = props => {\n  let inputElement = null;\n  const inputClasses = [classes.InputElement];\n\n  if (props.classInput) {\n    inputClasses.push(props.classInput);\n  }\n\n  let validationError = null;\n\n  if (props.invalid && props.shouldValidate && props.touched) {\n    inputClasses.push(classes.Invalid);\n    validationError = React.createElement(\"p\", {\n      className: classes.ValidationError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"Veuillez entrer une valeur valide..\");\n  }\n\n  switch (props.inputType) {\n    case 'input':\n      inputElement = React.createElement(\"input\", Object.assign({\n        className: inputClasses.join(' ')\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }));\n      break;\n\n    default:\n      inputElement = React.createElement(\"input\", Object.assign({\n        className: inputClasses.join(' ')\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }));\n      break;\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: classes.Label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, props.label), inputElement, validationError);\n};\n\nexport default Input;","map":{"version":3,"sources":["/home/melvin/code/Melvinvmegen/melvinvmegen.github.io/src/Components/Input/Input.js"],"names":["React","classes","Input","props","inputElement","inputClasses","InputElement","classInput","push","validationError","invalid","shouldValidate","touched","Invalid","ValidationError","inputType","join","elementConfig","value","changed","Label","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,MAAIC,YAAY,GAAG,IAAnB;AACA,QAAMC,YAAY,GAAG,CAACJ,OAAO,CAACK,YAAT,CAArB;;AACA,MAAIH,KAAK,CAACI,UAAV,EAAsB;AACpBF,IAAAA,YAAY,CAACG,IAAb,CAAkBL,KAAK,CAACI,UAAxB;AACD;;AACD,MAAIE,eAAe,GAAG,IAAtB;;AACA,MAAIN,KAAK,CAACO,OAAN,IAAiBP,KAAK,CAACQ,cAAvB,IAAyCR,KAAK,CAACS,OAAnD,EAA4D;AAC1DP,IAAAA,YAAY,CAACG,IAAb,CAAkBP,OAAO,CAACY,OAA1B;AACAJ,IAAAA,eAAe,GAAG;AAAG,MAAA,SAAS,EAAER,OAAO,CAACa,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAlB;AACD;;AAED,UAAQX,KAAK,CAACY,SAAd;AACE,SAAM,OAAN;AACEX,MAAAA,YAAY,GAAG;AAAO,QAAA,SAAS,EAAEC,YAAY,CAACW,IAAb,CAAkB,GAAlB;AAAlB,SAA8Cb,KAAK,CAACc,aAApD;AAAmE,QAAA,KAAK,EAAEd,KAAK,CAACe,KAAhF;AAAuF,QAAA,QAAQ,EAAEf,KAAK,CAACgB,OAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AACA;;AACF;AACEf,MAAAA,YAAY,GAAG;AAAO,QAAA,SAAS,EAAEC,YAAY,CAACW,IAAb,CAAkB,GAAlB;AAAlB,SAA8Cb,KAAK,CAACc,aAApD;AAAmE,QAAA,KAAK,EAAEd,KAAK,CAACe,KAAhF;AAAuF,QAAA,QAAQ,EAAEf,KAAK,CAACgB,OAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AACA;AANJ;;AASA,SACE;AAAK,IAAA,SAAS,EAAElB,OAAO,CAACC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAED,OAAO,CAACmB,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCjB,KAAK,CAACkB,KAAxC,CADF,EAEGjB,YAFH,EAGGK,eAHH,CADF;AAOD,CA5BD;;AA8BA,eAAeP,KAAf","sourcesContent":["import React from 'react';\nimport classes from './Input.module.css'\n\nconst Input = (props) => {\n  let inputElement = null\n  const inputClasses = [classes.InputElement]\n  if (props.classInput) {\n    inputClasses.push(props.classInput)\n  }\n  let validationError = null\n  if (props.invalid && props.shouldValidate && props.touched) {\n    inputClasses.push(classes.Invalid);\n    validationError = <p className={classes.ValidationError}>Veuillez entrer une valeur valide..</p>\n  }\n\n  switch (props.inputType) {\n    case ('input'):\n      inputElement = <input className={inputClasses.join(' ')} {...props.elementConfig} value={props.value} onChange={props.changed}></input>;\n      break;\n    default:\n      inputElement = <input className={inputClasses.join(' ')} {...props.elementConfig} value={props.value} onChange={props.changed}></input>;\n      break;\n  }\n\n  return (\n    <div className={classes.Input}>\n      <label className={classes.Label}>{props.label}</label>\n      {inputElement}\n      {validationError}\n    </div>\n  )\n}\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}