{"ast":null,"code":"var _jsxFileName = \"/home/melvin/code/Melvinvmegen/melvinvmegen.github.io/src/Containers/Header/ContactForm/ContactForm.js\";\nimport React, { Fragment } from 'react';\nimport Button from '../../../Components/FormSubmit/FormSubmit';\nimport Input from \"../../../Components/Input/Input\";\nimport { Component } from 'react';\nimport axios from '../../../axios-contacts';\nimport classes from './ContactForm.module.css';\nimport Spinner from \"../../../Components/Spinner/Spinner\";\n\nclass ContactForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      orderForm: {\n        name: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Nom, prénom'\n          },\n          value: ''\n        },\n        company: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Entreprise'\n          },\n          value: ''\n        },\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'email',\n            placeholder: 'email@gmail.com'\n          },\n          value: ''\n        },\n        city: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Ville'\n          },\n          value: ''\n        },\n        request: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Demande'\n          },\n          value: ''\n        }\n      }\n    };\n\n    this.inputChangedHandler = (event, inputIdentifier) => {\n      const form = { ...this.state.orderForm\n      };\n      const updatedFormElement = { ...form[inputIdentifier]\n      };\n      updatedFormElement.value = event.target.value;\n      form[inputIdentifier] = updatedFormElement;\n      this.setState({\n        orderForm: form\n      });\n    };\n\n    this.contactHandler = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const formData = {};\n\n      for (let formElement in this.state.orderForm) {\n        formData[formElement] = this.state.orderForm[formElement].value;\n      }\n\n      const contact = {\n        contactData: formData\n      };\n      axios.post('/contacts.json', contact).then(response => {\n        this.setState({\n          loading: false\n        });\n      }).catch(error => {\n        this.setState({\n          loading: false\n        });\n      });\n    };\n  }\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n\n    let contactForm = React.createElement(\"form\", {\n      onSubmit: this.contactHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: classes.titleForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Prenons contact\"), formElementsArray.map(formElement => React.createElement(Input, {\n      key: formElement.id,\n      elementType: formElement.config.elementType,\n      elementConfig: formElement.config.elementConfig,\n      value: formElement.config.value,\n      changed: event => this.inputChangedHandler(event, formElement.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(Button, {\n      wrapperClass: classes.wrapperBtnForm,\n      btnClass: classes.btnForm,\n      id: classes.submitForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }));\n\n    if (this.state.loading) {\n      contactForm = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, contactForm);\n  }\n\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["/home/melvin/code/Melvinvmegen/melvinvmegen.github.io/src/Containers/Header/ContactForm/ContactForm.js"],"names":["React","Fragment","Button","Input","Component","axios","classes","Spinner","ContactForm","state","loading","orderForm","name","elementType","elementConfig","type","placeholder","value","company","email","city","request","inputChangedHandler","event","inputIdentifier","form","updatedFormElement","target","setState","contactHandler","preventDefault","formData","formElement","contact","contactData","post","then","response","catch","error","render","formElementsArray","key","push","id","config","contactForm","titleForm","map","wrapperBtnForm","btnForm","submitForm"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport Button from '../../../Components/FormSubmit/FormSubmit'\nimport Input from \"../../../Components/Input/Input\"\nimport { Component } from 'react';\nimport axios from '../../../axios-contacts'\nimport classes from './ContactForm.module.css'\nimport Spinner from \"../../../Components/Spinner/Spinner\";\n\nclass ContactForm extends Component {\n  state = {\n    loading: false,\n    orderForm: {\n      name: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Nom, prénom'\n        },\n        value: ''\n      },\n      company: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Entreprise'\n        },\n        value: ''\n      },\n      email: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'email',\n          placeholder: 'email@gmail.com'\n        },\n        value: ''\n      },\n      city: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Ville'\n        },\n        value: ''\n      },\n      request: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Demande'\n        },\n        value: ''\n      }\n    }\n  }\n\n  inputChangedHandler = (event, inputIdentifier) => {\n    const form = {\n      ...this.state.orderForm\n    };\n    const updatedFormElement = {\n      ...form[inputIdentifier]\n    };\n    updatedFormElement.value = event.target.value;\n    form[inputIdentifier] = updatedFormElement\n    this.setState({ orderForm: form })\n  }\n\n  contactHandler = (event) => {\n    event.preventDefault();\n    this.setState({ loading: true });\n    const formData = {};\n    for (let formElement in this.state.orderForm) {\n      formData[formElement] = this.state.orderForm[formElement].value;\n    }\n    const contact = {\n      contactData: formData\n    }\n    axios.post('/contacts.json', contact)\n      .then(response => { this.setState({ loading: false }) })\n      .catch(error => { this.setState({ loading: false }) });\n  }\n\n  render() {\n    const formElementsArray = []\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      })\n    }\n\n    let contactForm = <form onSubmit={this.contactHandler}>\n      <h2 className={classes.titleForm}>Prenons contact</h2>\n      {formElementsArray.map(formElement => (\n        <Input\n          key={formElement.id}\n          elementType={formElement.config.elementType}\n          elementConfig={formElement.config.elementConfig}\n          value={formElement.config.value}\n          changed={(event) => this.inputChangedHandler(event, formElement.id)} />\n      ))}\n      <Button wrapperClass={classes.wrapperBtnForm} btnClass={classes.btnForm} id={classes.submitForm} />\n    </form >;\n    if (this.state.loading) {\n      contactForm = <Spinner />\n    }\n    return (\n      (\n        <Fragment>\n          {contactForm}\n        </Fragment>\n      )\n    )\n  }\n}\n\nexport default ContactForm\n"]},"metadata":{},"sourceType":"module"}