{"ast":null,"code":"var _jsxFileName = \"/home/melvin/code/Melvinvmegen/melvinvmegen.github.io/src/hoc/withErrorHandler/withErrorHandler.js\";\nimport React, { Component, Fragment } from 'react';\nimport Modal from \"../../Components/Modal/Modal\";\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  var _temp;\n\n  return _temp = class extends Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        error: null\n      };\n\n      this.errorConfirmedHandler = () => {\n        this.setState({\n          error: null\n        });\n      };\n    }\n\n    componentDidMount() {\n      axios.interceptors.request.use(req => {\n        this.setState({\n          error: null\n        });\n        return req;\n      });\n      axios.interceptors.response.use(res => res, error => {\n        this.setState({\n          error: error\n        });\n      });\n    }\n\n    render() {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(WrappedComponent, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })), React.createElement(Modal, {\n        show: this.state.error,\n        clicked: this.errorConfirmedHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, this.state.error ? this.state.error.message : null));\n    }\n\n  }, _temp;\n};\n\nexport default withErrorHandler;","map":{"version":3,"sources":["/home/melvin/code/Melvinvmegen/melvinvmegen.github.io/src/hoc/withErrorHandler/withErrorHandler.js"],"names":["React","Component","Fragment","Modal","withErrorHandler","WrappedComponent","axios","state","error","errorConfirmedHandler","setState","componentDidMount","interceptors","request","use","req","response","res","render","props","message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,8BAAlB;;AAEA,MAAMC,gBAAgB,GAAG,CAACC,gBAAD,EAAmBC,KAAnB,KAA6B;AAAA;;AACpD,iBAAO,cAAcL,SAAd,CAAwB;AAAA;AAAA;AAAA,WAE7BM,KAF6B,GAErB;AACNC,QAAAA,KAAK,EAAE;AADD,OAFqB;;AAAA,WAgB7BC,qBAhB6B,GAgBL,MAAM;AAC5B,aAAKC,QAAL,CAAc;AAAEF,UAAAA,KAAK,EAAE;AAAT,SAAd;AACD,OAlB4B;AAAA;;AAM7BG,IAAAA,iBAAiB,GAAG;AAClBL,MAAAA,KAAK,CAACM,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BC,GAAG,IAAI;AACpC,aAAKL,QAAL,CAAc;AAAEF,UAAAA,KAAK,EAAE;AAAT,SAAd;AACA,eAAOO,GAAP;AACD,OAHD;AAIAT,MAAAA,KAAK,CAACM,YAAN,CAAmBI,QAAnB,CAA4BF,GAA5B,CAAgCG,GAAG,IAAIA,GAAvC,EAA4CT,KAAK,IAAI;AACnD,aAAKE,QAAL,CAAc;AAAEF,UAAAA,KAAK,EAAEA;AAAT,SAAd;AACD,OAFD;AAGD;;AAMDU,IAAAA,MAAM,GAAG;AACP,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD,oBAAsB,KAAKC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAEE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWC,KADnB;AAEE,QAAA,OAAO,EAAE,KAAKC,qBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGG,KAAKF,KAAL,CAAWC,KAAX,GAAmB,KAAKD,KAAL,CAAWC,KAAX,CAAiBY,OAApC,GAA8C,IAHjD,CAFF,CADF;AAUD;;AA/B4B,GAA/B;AAiCD,CAlCD;;AAoCA,eAAehB,gBAAf","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport Modal from \"../../Components/Modal/Modal\";\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  return class extends Component {\n\n    state = {\n      error: null\n    }\n\n    componentDidMount() {\n      axios.interceptors.request.use(req => {\n        this.setState({ error: null });\n        return req;\n      })\n      axios.interceptors.response.use(res => res, error => {\n        this.setState({ error: error });\n      });\n    }\n\n    errorConfirmedHandler = () => {\n      this.setState({ error: null })\n    }\n\n    render() {\n      return (\n        <Fragment>\n          <WrappedComponent {...this.props} />\n          <Modal\n            show={this.state.error}\n            clicked={this.errorConfirmedHandler}>\n            {this.state.error ? this.state.error.message : null}\n          </Modal>\n        </Fragment>\n      )\n    }\n  }\n}\n\nexport default withErrorHandler;\n"]},"metadata":{},"sourceType":"module"}