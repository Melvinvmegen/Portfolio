{"ast":null,"code":"import _objectSpread from\"/home/melvin/code/Melvinvmegen/melvinvmegen.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/melvin/code/Melvinvmegen/melvinvmegen.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/melvin/code/Melvinvmegen/melvinvmegen.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/melvin/code/Melvinvmegen/melvinvmegen.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/melvin/code/Melvinvmegen/melvinvmegen.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/melvin/code/Melvinvmegen/melvinvmegen.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Fragment,Component}from'react';import Button from'../FormSubmit/FormSubmit';import Input from\"../Input/Input\";import axios from'../../axios-contacts';import classes from'./ContactForm.module.css';import Spinner from\"../Spinner/Spinner\";var ContactForm=/*#__PURE__*/function(_Component){_inherits(ContactForm,_Component);function ContactForm(){var _getPrototypeOf2;var _this;_classCallCheck(this,ContactForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(ContactForm)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={loading:false,orderForm:{name:{elementType:'input',elementConfig:{type:'text',placeholder:'Nom, prÃ©nom'},value:'',validation:{required:true},valid:false,touched:false},company:{elementType:'input',elementConfig:{type:'text',placeholder:'Entreprise'},value:'',validation:{required:true},valid:false,touched:false},email:{elementType:'input',elementConfig:{type:'email',placeholder:'Email@gmail.com'},value:'',validation:{required:true,isEmail:true},valid:false,touched:false},city:{elementType:'input',elementConfig:{type:'text',placeholder:'Ville'},value:'',validation:{required:true},valid:false,touched:false},request:{elementType:'input',elementConfig:{type:'text',placeholder:'Demande'},value:'',validation:{required:true},valid:false,touched:false}},formIsValid:false};_this.inputChangedHandler=function(event,inputIdentifier){var form=_objectSpread({},_this.state.orderForm);var updatedFormElement=_objectSpread({},form[inputIdentifier]);updatedFormElement.value=event.target.value;updatedFormElement.valid=_this.checkValidity(updatedFormElement.value,updatedFormElement.validation);updatedFormElement.touched=true;form[inputIdentifier]=updatedFormElement;var formIsValid=true;for(var _inputIdentifier in form){formIsValid=form[_inputIdentifier].valid&&formIsValid;}_this.setState({orderForm:form,formIsValid:formIsValid});};_this.contactHandler=function(event){event.preventDefault();_this.setState({loading:true});var formData={};for(var formElement in _this.state.orderForm){formData[formElement]=_this.state.orderForm[formElement].value;}var contact={contactData:formData};axios.post('/contacts.json',contact).then(function(response){_this.setState({loading:false},function(){_this.props.modalClosed();});}).catch(function(error){_this.setState({loading:false},function(){_this.props.modalClosed();});});};return _this;}_createClass(ContactForm,[{key:\"checkValidity\",value:function checkValidity(value,rules){var isValid=true;if(rules.required){isValid=value.trim()!==''&&isValid;}if(rules.isEmail){var pattern=/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;isValid=pattern.test(value)&&isValid;}return isValid;}},{key:\"render\",value:function render(){var _this2=this;var formElementsArray=[];for(var key in this.state.orderForm){formElementsArray.push({id:key,config:this.state.orderForm[key]});}var contactForm=React.createElement(\"form\",{onSubmit:this.contactHandler},React.createElement(\"h2\",{className:classes.titleForm},\"Prenons contact\"),formElementsArray.map(function(formElement){return React.createElement(Input,{key:formElement.id,elementType:formElement.config.elementType,elementConfig:formElement.config.elementConfig,value:formElement.config.value,changed:function changed(event){return _this2.inputChangedHandler(event,formElement.id);},invalid:!formElement.config.valid,shouldValidate:formElement.config.validation,touched:formElement.config.touched});}),React.createElement(Button,{wrapperClass:classes.wrapperBtnForm,btnClass:classes.btnForm,id:classes.submitForm,formIsValid:this.state.formIsValid}));if(this.state.loading){contactForm=React.createElement(Spinner,null);}return React.createElement(Fragment,null,contactForm);}}]);return ContactForm;}(Component);export default ContactForm;","map":{"version":3,"sources":["/home/melvin/code/Melvinvmegen/melvinvmegen.github.io/src/Components/ContactForm/ContactForm.js"],"names":["React","Fragment","Component","Button","Input","axios","classes","Spinner","ContactForm","state","loading","orderForm","name","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","company","email","isEmail","city","request","formIsValid","inputChangedHandler","event","inputIdentifier","form","updatedFormElement","target","checkValidity","setState","contactHandler","preventDefault","formData","formElement","contact","contactData","post","then","response","props","modalClosed","catch","error","rules","isValid","trim","pattern","test","formElementsArray","key","push","id","config","contactForm","titleForm","map","wrapperBtnForm","btnForm","submitForm"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from 'react';\nimport Button from '../FormSubmit/FormSubmit'\nimport Input from \"../Input/Input\"\nimport axios from '../../axios-contacts'\nimport classes from './ContactForm.module.css'\nimport Spinner from \"../Spinner/Spinner\";\n\nclass ContactForm extends Component {\n  state = {\n    loading: false,\n    orderForm: {\n      name: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Nom, prÃ©nom'\n        },\n        value: '',\n        validation: {\n          required: true,\n        },\n        valid: false,\n        touched: false\n      },\n      company: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Entreprise'\n        },\n        value: '',\n        validation: {\n          required: true,\n        },\n        valid: false,\n        touched: false\n      },\n      email: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'email',\n          placeholder: 'Email@gmail.com'\n        },\n        value: '',\n        validation: {\n          required: true,\n          isEmail: true\n        },\n        valid: false,\n        touched: false\n      },\n      city: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Ville'\n        },\n        value: '',\n        validation: {\n          required: true,\n        },\n        valid: false,\n        touched: false\n      },\n      request: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Demande'\n        },\n        value: '',\n        validation: {\n          required: true,\n        },\n        valid: false,\n        touched: false\n      },\n    },\n    formIsValid: false\n  }\n\n  inputChangedHandler = (event, inputIdentifier) => {\n    const form = {\n      ...this.state.orderForm\n    };\n    const updatedFormElement = {\n      ...form[inputIdentifier]\n    };\n    updatedFormElement.value = event.target.value;\n    updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\n    updatedFormElement.touched = true;\n    form[inputIdentifier] = updatedFormElement\n    let formIsValid = true;\n    for (let inputIdentifier in form) {\n      formIsValid = form[inputIdentifier].valid && formIsValid;\n\n    }\n    this.setState({ orderForm: form, formIsValid: formIsValid })\n  }\n\n  contactHandler = (event) => {\n    event.preventDefault();\n    this.setState({ loading: true });\n    const formData = {};\n    for (let formElement in this.state.orderForm) {\n      formData[formElement] = this.state.orderForm[formElement].value;\n    }\n    const contact = {\n      contactData: formData\n    }\n    axios.post('/contacts.json', contact)\n      .then(response => {\n        this.setState({ loading: false }, () => {\n          this.props.modalClosed();\n        })\n      })\n      .catch(error => {\n        this.setState({ loading: false }, () => {\n          this.props.modalClosed();\n        })\n      });\n  }\n\n  checkValidity(value, rules) {\n    let isValid = true;\n\n    if (rules.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.isEmail) {\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n      isValid = pattern.test(value) && isValid\n    }\n    return isValid\n  }\n\n  render() {\n    const formElementsArray = []\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      })\n    }\n\n    let contactForm = <form onSubmit={this.contactHandler}>\n      <h2 className={classes.titleForm}>Prenons contact</h2>\n      {formElementsArray.map(formElement => (\n        <Input\n          key={formElement.id}\n          elementType={formElement.config.elementType}\n          elementConfig={formElement.config.elementConfig}\n          value={formElement.config.value}\n          changed={(event) => this.inputChangedHandler(event, formElement.id)}\n          invalid={!formElement.config.valid}\n          shouldValidate={formElement.config.validation}\n          touched={formElement.config.touched} />\n      ))}\n      <Button wrapperClass={classes.wrapperBtnForm} btnClass={classes.btnForm} id={classes.submitForm} formIsValid={this.state.formIsValid} />\n    </form>;\n    if (this.state.loading) {\n      contactForm = <Spinner />\n    }\n    return (\n      (\n        <Fragment>\n          {contactForm}\n        </Fragment>\n      )\n    )\n  }\n}\n\nexport default ContactForm\n"]},"metadata":{},"sourceType":"module"}